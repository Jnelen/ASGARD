#!/bin/sh

id=$1
models=""
firstmodel=""

for i in `seq 1 10`; do
  ( reduce -NUCLEAR -Model$i -BUILD -noHIS $id.pdb 2> reduce_$i.out ) \
     | sed 's/HIS /HID /' | grep -v 'H   MET A 138' > $id.H$i.pdb

  grep 'found=0' $id.H$i.pdb > /dev/null
  stat=$?
  if [ "$stat" == 1 ]; then
     models="$models $i"
     if [ "$firstmodel" == "" ]; then
        firstmodel=$i
     fi
  else
     /bin/rm -f $id.H$i.pdb reduce_$i.out
  fi
done

echo "Found models: $models"
echo "firstmodel: $firstmodel"

for i in $models; do

cat<<EOF > leap.in
source leaprc.ff14SBonlysc
set default PBradii mbondi3
x = loadpdb $id.H$i.pdb
saveamberparm x $id.parm7 $id.$i.rst7
savepdb x $id.$i.pdb
quit
EOF

  tleap -f leap.in > tleap.$i.out
  /bin/rm leap.in

done

./cyanarest_to_amberRST -pdb $id.$firstmodel.pdb

for i in $models; do
   echo Run.sa $i

#   Note: need to add back in if RDC's are present:
#   iscale=5, scalm=300.,

cat <<EOF > mdin
 15ps simulated annealing protocol, from p. 430 of Amber14 Reference Manual
 &cntrl
 nstlim=15000, ntt=1, ntpr=500, pencut=0.1, tempi=0.0,
 ipnlty=1, nmropt=1, vlimit=20,
 ntb=0, igb=8, cut=25., rgbmax=25.,
 ntc=2,
 /
 &wt type='TEMP0', istep1=0,istep2=1000,value1=10., value2=500., /
 &wt type='TEMP0', istep1=1001, istep2=3000, value1=500., value2=500.0, /
 &wt type='TEMP0', istep1=3001, istep2=15000, value1=0., value2=0.0, /
 &wt type='TAUTP', istep1=0,istep2=3000,value1=0.2, value2=0.2, /
 &wt type='TAUTP', istep1=3001,istep2=11000,value1=4.0, value2=2.0, /
 &wt type='TAUTP', istep1=11001,istep2=13000,value1=1.0, value2=1.0, /
 &wt type='TAUTP', istep1=13001,istep2=14000,value1=0.5, value2=0.5, /
 &wt type='TAUTP', istep1=14001,istep2=15000,value1=0.05, value2=0.05, /
 &wt type='REST', istep1=0,istep2=3000,value1=0.1, value2=1.0, /
 &wt type='REST', istep1=3001,istep2=15000,value1=1.0, value2=1.0, /
 &wt type='END'  /                                                          
LISTOUT=POUT                                                                   
DISANG=RST.all                                      
END                                                                            
EOF

mpiexec -n 4 pmemd.MPI -O -i mdin -p $id.parm7 -c $id.$i.rst7 \
    -o $id.$i.sa1.o -r $id.$i.sa1.x

done
