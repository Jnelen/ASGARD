#!/usr/bin/perl

if (scalar(@ARGV) != 2) { die "
USAGE: $0 PDBfile torsionRestraintFile

Prepares Amber coupling constant restraints from 
a file containing restraints in an easier to read 
format. Each restraint consists of one line of 17 
white space separated fields. The first 12 fields
define the four atoms involved by specifying the
residue number, residue name and atom name of
each of the four atoms in turn. The next two
fields specify the coupling constant and its 
uncertainty, both in Hz. The last three fields
specify the parameters A, B and C to be used in 
the Karplus relationship. An example restraint:

6 GLU HN 6 GLU N 6 GLU CA 6 GLU HA -4.8 0.5 7.90 -1.05 0.65

The PDB file must be generated by Amber to
correctly map atom names to atom numbers.

Brendan M. Duggan - 2014 June 23
\n";
}

# parse amber generated PDB file mapping atom names to atom numbers
open(IN,$ARGV[0]) or die "Can't read from PDB file $ARGV[0].\n";
while ($line = <IN>) {
  if ($line !~ /^ATOM\s+/) { next; }
  ($atomNumber = substr($line,6,5)) =~ s/\s+//g;
  ($atomName = substr($line,12,4)) =~ s/\s+//g;
  ($residueName = substr($line,17,3)) =~ s/\s+//g;
  ($residueNumber = substr($line,22,4)) =~ s/\s+//g;
  $number{$residueNumber}{$residueName}{$atomName} = $atomNumber;
}
close(IN);


#parse restraint file printing out results inside of loop on way through file
open(IN,$ARGV[1]) or die "Can't read from J coupling restraint file $ARGV[1].\n";
while ($line = <IN>) {
  if ($line =~ /^#/) { next; }
  $line =~ s/^\s+//; # remove any leading white space for consistency when splitting
  @fields = split(/\s+/,$line);
  print "# $line";
  printf " &rst\n";
  printf "  iat = %6d, %6d, %6d, %6d,\n", $number{$fields[0]}{$fields[1]}{$fields[2]},$number{$fields[3]}{$fields[4]}{$fields[5]},$number{$fields[6]}{$fields[7]}{$fields[8]},$number{$fields[9]}{$fields[10]}{$fields[11]};
  printf "  r1 = %5.1f, r2 = %5.1f, r3 = %5.1f, r4 = %5.1f,\n", $fields[12]-$fields[13]*2,$fields[12]-$fields[13],$fields[12]+$fields[13],$fields[12]+$fields[13]*2;
  printf "  rk2 = 2.0, rk3 = 2.0,\n";
  printf "  rjcoef = %6.2f, %6.2f, %6.2f,\n", $fields[14],$fields[15],$fields[16];
  printf " &end\n\n";
}
close(IN);

exit;
