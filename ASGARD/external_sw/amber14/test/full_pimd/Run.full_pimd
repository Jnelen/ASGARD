#!/bin/csh -f
#TEST-PROGRAM sander
#TEST-DESCRIP TO_BE_DEtermined
#TEST-PURPOSE regression, basic
#TEST-STATE   undocumented

set sander = "../../bin/sander.MPI"
if( $?TESTsander ) then
   set sander = $TESTsander
endif

if( ! $?DO_PARALLEL ) then
  echo " full pimd can only be run parallel: set env var DO_PARALLEL"
  echo " Not running test, exiting....."
  exit(0)
else 
  set MY_DO_PARALLEL="$DO_PARALLEL"
  set numprocs=`echo $DO_PARALLEL | awk -f numprocs.awk `
  if ( $numprocs != 4 ) then
    echo "this test is set up for 4 nodes only, changing node number to 4..."
    set MY_DO_PARALLEL=`echo $DO_PARALLEL | awk -f chgprocs.awk`
  endif
 
  echo "Testing PIMD with langevin dynamics"
  /bin/rm -f lang.out	
  $MY_DO_PARALLEL $sander -ng 4 -groupfile gf_lang > lang/sander.out.1 || goto error
  ../dacdif lang.out.save lang.out

  echo "Testing PIMD with Nose-Hoover-Chain thermostat"
  /bin/rm -f nhc.out
  $MY_DO_PARALLEL $sander -ng 4 -groupfile gf_nhc >  nhc/sander.out || goto error
  ../dacdif nhc.out.save nhc.out

  echo "Testing PIMD with amoeba force field"
  /bin/rm -f amoeba.out
  $MY_DO_PARALLEL $sander -ng 4 -groupfile gf_amoeba > amoeba/sander.out || goto error
  ../dacdif amoeba.out.save amoeba.out

  echo "Testing Normal Mode PIMD"
  /bin/rm -f nmpimd.out
  $MY_DO_PARALLEL $sander -ng 4 -groupfile gf_nmpimd > nmpimd/sander.out || goto error
  ../dacdif nmpimd.out.save nmpimd.out

  echo "Testing constant pressure PIMD"
  /bin/rm -f ntp.out
  $MY_DO_PARALLEL $sander -ng 4 -groupfile gf_ntp  > ntp/sander.out || goto error
  ../dacdif ntp.out.save ntp.out

  echo "Testing Centroid MD"
  /bin/rm -f cmd.out
  $MY_DO_PARALLEL $sander -ng 4 -groupfile gf_cmd  > cmd/sander.out || goto error
  ../dacdif cmd.out.save cmd.out

  echo "Testing NEB with GB"
  /bin/rm -f neb_gb.out
  $MY_DO_PARALLEL $sander -ng 4 -groupfile gf_neb_gb  > neb_gb/sander.out || goto error
  ../dacdif neb_gb.out.save neb_gb.out


endif
exit(0)

error:
echo "  ${0}:  Program error"
exit(1)
